Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.   touch hw2.txt
 2. Сценарий перенесите в этот файл. cat > hw2.txt
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
4. Создать внешний репозиторий c названием JSON. -  Нажать new --> в поле Repository name  ввести JSON , поставить галочку Add a README file --> нажать Create repository

 5. Клонировать репозиторий JSON на локальный компьютер.  git clone git@github.com:nikolaymarkov3/JSON.git
 6. Внутри локального JSON создать файл “new.json”.  vim new.json
 7. Добавить файл под гит.   git add new.json
 8. Закоммитить файл.  git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий.  git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.JSON , I, “написать код”, esc :wq


11.Отправить изменения на внешний репозиторий. git commit -am "json"-->git push

 12. Создать файл preferences.json  vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.  I, “написать код”, esc :wq



14.Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON vim sklls.json -->I, “написать код”, esc :wq


 15. Отправить сразу 2 файла на внешний репозиторий.  git add .-->git commit -m "сразу 2 файла"--> git push
16. На веб интерфейсе создать файл bug_report.json.  войти в репозиторий json-->нажать кнопку Add file -- >Create new file --> в поле Name your file ввести bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. -- нажать Commit changes
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.    зайти в файл  bug_report.json --> нажать Edit this file “ввести код”

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--  нажать Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON      git pull


XML
 21. Создать внешний репозиторий c названием XML.  -- Нажать new --> в поле Repository name  ввести XML , поставить галочку Add a README file --> нажать Create repository
 22. Клонировать репозиторий XML на локальный компьютер. --git clone https://github.com/nikolaymarkov3/XML.git
 23. Внутри локального XML создать файл “new.xml”. --cd xml потом команда vim new.xml
 24. Добавить файл под гит.   ----  git add new.xml
 25. Закоммитить файл.  --- git commit -m “git add .”
 26. Отправить файл на внешний GitHub репозиторий. ----- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.   ---vim new.xml “написать информацию о себе” esc :wq ,  commit -am “git add .”
 28. Отправить изменения на внешний репозиторий.    --- git push
 29. Создать файл preferences.xml   --  vim preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.  --- добавляем информацию о своих предпочтениях в формате XML esc :wq 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML  ---- vim sklls.xml, добавить информацию о скиллах, esc :wq
 32. Сделать коммит в одну строку.                                                   git add . , commit -m “git add .”
 33. Отправить сразу 2 файла на внешний репозиторий.       --  git push
 34. На веб интерфейсе создать файл bug_report.xml.            войти в репозиторий xml-->нажать кнопку Add file -- >Create new file --> в поле Name your file ввести bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   нажать Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. -- зайти в файл  bug_report.xml--> нажать Edit this file “ввести код”

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   --нажать Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML --  git pull

TXT

1.Создать внешний репозиторий c названием TXT. Нажать new --> в поле Repository name  ввести TXT , поставить галочку Add a README file --> нажать Create repository

2.Клонировать репозиторий TXT на локальный компьютер. -- git clone git@github.com:nikolaymarkov3/TXT.git

3.Внутри локального TXT создать файл “new.txt”. -- vim new.txt

4.Добавить файл под гит. -- git add new.txt

5.Закоммитить файл. --  git commit -m "HW2 по теме terminal"

6.Отправить файл на внешний GitHub репозиторий. --  git push

7.Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. --  vim new.txt , I, “написать текст”, esc :wq


8.Отправить изменения на внешний репозиторий.  git commit -am "изменение п.7 hw" ,  git push

9.Создать файл preferences.txt ---   vim preferences.txt

10.В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. -- I, “написать текст”, esc :wq

11.Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT  -- vim sklls.txt ; I, написать текст, esc :wq



12.Сделать коммит в одну строку. --- git add . ; git commit -m "коммит в одну строку"

13.Отправить сразу 2 файла на внешний репозиторий.  -- git push

14.На веб интерфейсе создать файл bug_report.txt.  -- войти в репозиторий txt -->нажать кнопку Add file -- >Create new file --> в поле Name your file ввести bug_report.txt

15.Сделать Commit changes (сохранить) изменения на веб интерфейсе. -- нажать Commit new file

16.На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. -- зайти в файл  bug_report.txt --> нажать Edit this file “ввести текст”

17.Сделать Commit changes (сохранить) изменения на веб интерфейсе.  --- нажать Commit changes

18.Синхронизировать внешний и локальный репозиторий TXT --- git pull
